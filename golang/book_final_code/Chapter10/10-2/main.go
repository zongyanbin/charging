package main

import "fmt"

/**
10
协程和通道 给团带来新的高效率的开发模式

程序是顺序执行跟你编写的顺序一样，整个程序就一个上下文， 一个栈 一个堆
并发：运行多个上下文，对应多个调用栈， 每个进程运行时 都有自己的栈和堆 一套完整的上下文


串行的代码是逐行执行的
线程 共享内存
并发 引用锁，可以解决共享内存的问题，但是容易死锁 非常糟糕 挂了

并发优势：
	1.可以充分利用cup的核心优势 ，提高程序得执行力
	2.并发能充分利用cpu与其他硬件设备的异步性 如文件操作等 ，cup执行很快


10-1
多进程 程序进行结束后再进行销毁 占用资源比较多

一个进程可以包含多个线程

协程 是轻量级的线程

G P M
*/
func main() {
	for i := 0; i < 10; i++ {
		go func() {
			fmt.Println(i)
		}()
	}
}
